# Configuration principale de sécurité
security:
    enable_authenticator_manager: true  # Active le nouveau système d'authentification introduit dans Symfony 5.1
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'  # Utilise une stratégie de hachage automatique pour les mots de passe

    # Définition des fournisseurs d'utilisateurs
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User  # Classe de l'entité utilisateur
                property: email  # Utilise l'email comme identifiant pour l'authentification

    # Configuration des pare-feu (firewalls)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/  # Exclut certaines routes du système de sécurité
            security: false  # Désactive la sécurité pour les routes de développement

        main:
            lazy: true  # Charge l'utilisateur  pour améliorer les performances
            provider: app_user_provider  # Spécifie le fournisseur d'utilisateurs pour ce pare-feu
            entry_point: form_login  # Point d'entrée par défaut utilisant le formulaire de connexion
            form_login:
                login_path: oauth_login  # Chemin pour le formulaire de connexion
                check_path: oauth_login  # Chemin pour vérifier les informations de connexion
                enable_csrf: true  # Active la protection CSRF pour le formulaire de connexion
            custom_authenticators:
                - App\Security\KeycloakAuthenticator  # Utilise un authentificateur personnalisé pour Keycloak
            logout:
                path: logout  # Chemin pour déclencher la déconnexion

    # Contrôle d'accès
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }  # Restreint l'accès au chemin /admin aux utilisateurs avec le rôle ADMIN

# Configuration spécifique pour l'environnement de test
when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto  # Utilise un algorithme de hachage automatique
                cost: 4  # Définit le coût pour bcrypt (le plus bas possible)
                time_cost: 3  # Définit le coût temporel pour Argon2 (le plus bas possible)
                memory_cost: 10  # Définit le coût en mémoire pour Argon2 (le plus bas possible)